import numpy as np

from miv.mea.grid import *
from miv.mea.protocol import *
from miv.mea.unstructured import *

# fmt: off
mea_map = {
    "64_upper_half_intanRHD_stim": np.array(
        [
            [-1, 2, 4, 6, 23, 20, 18, -1],
            [10, 9, 3, 5, 24, 19, -1, -1],
            [12, 11, 1, 7, 22, -1, -1, -1],
            [15, 14, 13, 8, 21, -1, -1, -1],
            [-1, 25, 26, -1, -1, -1, -1, -1],
            [27, 28, 31, -1, -1, -1, -1, -1],
            [29, 30, -1, -1, -1, -1, -1, -1],
            [-1, -1, -1, -1, -1, -1, -1, -1],
        ],
        dtype=np.int_,
    )
    - 1,
    "64_intanRHD": np.array(
        [
            [-1, 10, 12, 14, 31, 28, 26, -1],
            [18, 17, 11, 13, 32, 27, 38, 37],
            [20, 19, 9, 15, 30, 39, 36, 35],
            [23, 22, 21, 16, 29, 34, 33, 56],
            [-1, 1, 2, 61, 44, 53, 54, 55],
            [3, 4, 7, 62, 43, 48, 51, 52],
            [5, 6, 59, 64, 41, 46, 49, 50],
            [-1, 58, 60, 63, 42, 45, 47, -1],
        ],
        dtype=np.int_,
    )
    - 1,
    "64_intanRHD_flipLR": np.array(
        [
            [-1, 42, 44, 46, 63, 60, 58, -1],
            [50, 49, 43, 45, 64, 59, 6, 5],
            [52, 51, 41, 47, 62, 7, 4, 3],
            [55, 54, 53, 48, 61, 2, 1, 24],
            [-1, 33, 34, 29, 12, 21, 22, 23],
            [35, 36, 39, 30, 11, 16, 19, 20],
            [37, 38, 27, 32, 9, 14, 17, 18],
            [-1, 26, 28, 31, 10, 13, 15, -1],
        ],
        dtype=np.int_,
    )
    - 1,
    "128_first_32_rhs": np.array(
        [
            [10, 23, 9, 24],
            [12, 21, 11, 22],
            [14, 19, 13, 20],
            [16, 17, 15, 18],
            [8, 25, 7, 26],
            [6, 27, 5, 28],
            [4, 29, 3, 30],
            [2, 31, 1, 32],
        ],
        dtype=np.int_,
    )
    - 1,
    "128_dual_connector_two_64_rhd": np.array(
        [
            (np.array([25, 24, 19, 18]) + 64).tolist()
            + (np.array([112, 109, 106, 103]) - 64).tolist(),
            (np.array([27, 26, 22, 17]) + 64).tolist()
            + (np.array([111, 108, 104, 101]) - 64).tolist(),
            (np.array([29, 28, 23, 20]) + 64).tolist()
            + (np.array([110, 105, 102, 99]) - 64).tolist(),
            (np.array([31, 32, 30, 21]) + 64).tolist()
            + (np.array([107, 100, 98, 97]) - 64).tolist(),
            (np.array([3, 4, 1, 2]) + 64).tolist()
            + (np.array([128, 127, 126, 125]) - 64).tolist(),
            (np.array([7, 8, 5, 6]) + 64).tolist()
            + (np.array([124, 123, 122, 121]) - 64).tolist(),
            (np.array([11, 12, 9, 10]) + 64).tolist()
            + (np.array([120, 119, 118, 117]) - 64).tolist(),
            (np.array([15, 16, 13, 14]) + 64).tolist()
            + (np.array([116, 115, 114, 113]) - 64).tolist(),
            (np.array([63, 64, 61, 62]) + 64).tolist()
            + (np.array([68, 67, 66, 65]) - 64).tolist(),
            (np.array([59, 60, 57, 58]) + 64).tolist()
            + (np.array([72, 71, 70, 69]) - 64).tolist(),
            (np.array([55, 56, 53, 54]) + 64).tolist()
            + (np.array([76, 75, 74, 73]) - 64).tolist(),
            (np.array([51, 52, 49, 50]) + 64).tolist()
            + (np.array([80, 79, 78, 77]) - 64).tolist(),
            (np.array([34, 33, 35, 44]) + 64).tolist()
            + (np.array([86, 93, 95, 96]) - 64).tolist(),
            (np.array([36, 37, 39, 45]) + 64).tolist()
            + (np.array([83, 89, 91, 94]) - 64).tolist(),
            (np.array([38, 42, 43, 48]) + 64).tolist()
            + (np.array([82, 85, 88, 92]) - 64).tolist(),
            (np.array([40, 41, 46, 47]) + 64).tolist()
            + (np.array([81, 84, 87, 90]) - 64).tolist(),
        ],
        dtype=np.int_,
    )
    - 1,
    "128_longMEA_rhd": np.array(
        [
            [83, 81, 47, 45],  # Chip side
            [82, 80, 46, 44],
            [84, 85, 43, 42],
            [86, 87, 41, 40],
            [88, 89, 39, 38],
            [90, 91, 37, 36],
            [92, 93, 35, 34],
            [94, 95, 33, 32],
            [64, 65, 63, 62],
            [66, 67, 61, 60],
            [68, 69, 59, 58],
            [70, 71, 57, 56],
            [72, 73, 55, 54],
            [74, 75, 53, 52],
            [76, 77, 51, 50],
            [78, 79, 49, 48],
            [126, 127, 1, 0],
            [124, 125, 3, 2],
            [122, 123, 5, 4],
            [120, 121, 7, 6],
            [118, 119, 9, 8],
            [116, 117, 11, 10],
            [114, 115, 13, 12],
            [112, 113, 15, 14],
            [97, 96, 30, 31],
            [99, 98, 28, 29],
            [101, 100, 26, 27],
            [103, 105, 23, 25],
            [102, 104, 22, 24],
            [107, 106, 20, 21],
            [109, 111, 17, 19],
            [108, 110, 16, 18],
        ],
        dtype=np.int_,
    ),
    "512_rhd": np.array(
        [  # chip-side
            [-1  , -1  , -1  , -1  , 230 , 227 , 224 , 221 , 218 , 215 , 212 , 209 , 431 , 339 , 342 , 345 , 348 , 351 , 354 , 357 , -1  , -1  , -1  , -1  , ],
            [-1  , -1  , -1  , -1  , 22  , 26  , 225 , 33  , 36  , 39  , 42  , 45  , 336 , 429 , 426 , 423 , 420 , 356 , 409 , 407 , -1  , -1  , -1  , -1  , ],
            [-1  , -1  , -1  , -1  , 20  , 24  , 226 , 32  , 219 , 216 , 213 , 210 , 341 , 344 , 347 , 350 , 415 , 355 , 411 , 403 , -1  , -1  , -1  , -1  , ],
            [-1  , -1  , -1  , -1  , 237 , 21  , 229 , 30  , 220 , 38  , 41  , 44  , 427 , 424 , 421 , 349 , 417 , 358 , 408 , 400 , -1  , -1  , -1  , -1  , ],
            [6   , 246 , 242 , 13  , 15  , 18  , 233 , 228 , 31  , 35  , 40  , 211 , 340 , 425 , 418 , 416 , 359 , 360 , 405 , 402 , 368 , 371 , 375 , 391 , ],
            [3   , 248 , 250 , 247 , 244 , 240 , 236 , 232 , 27  , 223 , 222 , 43  , 428 , 353 , 352 , 414 , 361 , 363 , 366 , 373 , 376 , 379 , 377 , 388 , ],
            [0   , 1   , 2   , 5   , 9   , 12  , 14  , 19  , 23  , 28  , 29  , 214 , 343 , 412 , 413 , 406 , 404 , 401 , 397 , 394 , 390 , 387 , 386 , 385 , ],
            [61  , 195 , 254 , 192 , 4   , 8   , 243 , 241 , 235 , 231 , 34  , 217 , 346 , 419 , 362 , 364 , 367 , 372 , 393 , 389 , 321 , 383 , 324 , 446 , ],
            [58  , 196 , 59  , 60  , 255 , 253 , 245 , 11  , 239 , 234 , 37  , 46  , 337 , 422 , 365 , 370 , 396 , 374 , 382 , 320 , 445 , 444 , 327 , 441 , ],
            [55  , 199 , 56  , 198 , 193 , 63  , 252 , 7   , 10  , 16  , 25  , 208 , 430 , 410 , 398 , 395 , 392 , 381 , 384 , 322 , 325 , 443 , 330 , 438 , ],
            [52  , 202 , 53  , 201 , 200 , 62  , 251 , 194 , 197 , 249 , 238 , 47  , 338 , 369 , 378 , 326 , 323 , 380 , 447 , 329 , 328 , 440 , 333 , 435 , ],
            [49  , 205 , 50  , 204 , 51  , 203 , 54  , 57  , 206 , 48  , 207 , 17  , 399 , 434 , 334 , 433 , 442 , 439 , 332 , 436 , 331 , 437 , 432 , 335 , ],
            [177 , 77  , 178 , 76  , 179 , 75  , 182 , 185 , 78  , 176 , 79  , 113 , 495 , 306 , 462 , 305 , 314 , 311 , 460 , 308 , 459 , 309 , 304 , 463 , ],
            [180 , 74  , 181 , 73  , 72  , 190 , 125 , 66  , 69  , 121 , 142 , 175 , 466 , 273 , 506 , 454 , 451 , 508 , 257 , 457 , 456 , 312 , 461 , 307 , ],
            [183 , 71  , 184 , 70  , 67  , 191 , 124 , 135 , 138 , 112 , 153 , 80  , 302 , 282 , 494 , 269 , 266 , 509 , 256 , 450 , 453 , 315 , 458 , 310 , ],
            [186 , 68  , 187 , 188 , 127 , 123 , 119 , 139 , 143 , 106 , 165 , 174 , 465 , 294 , 493 , 274 , 268 , 502 , 510 , 448 , 317 , 318 , 455 , 313 , ],
            [189 , 65  , 64  , 126 , 132 , 136 , 115 , 145 , 107 , 103 , 162 , 89  , 474 , 291 , 490 , 492 , 271 , 500 , 265 , 263 , 449 , 511 , 452 , 316 , ],
            [128 , 129 , 130 , 133 , 137 , 140 , 110 , 147 , 151 , 156 , 157 , 86  , 471 , 284 , 285 , 278 , 276 , 497 , 267 , 264 , 262 , 259 , 260 , 319 , ],
            [131 , 122 , 120 , 117 , 114 , 144 , 108 , 104 , 155 , 95  , 94  , 171 , 300 , 481 , 480 , 286 , 489 , 491 , 270 , 501 , 504 , 507 , 505 , 258 , ],
            [134 , 118 , 116 , 141 , 111 , 146 , 105 , 100 , 159 , 163 , 168 , 83  , 468 , 297 , 290 , 288 , 487 , 488 , 277 , 498 , 496 , 499 , 503 , 261 , ],
            [-1  , -1  , -1  , -1  , 109 , 149 , 101 , 158 , 92  , 166 , 169 , 172 , 299 , 296 , 293 , 477 , 289 , 486 , 280 , 272 , -1  , -1  , -1  , -1  , ],
            [-1  , -1  , -1  , -1  , 148 , 152 , 98  , 160 , 91  , 88  , 85  , 82  , 469 , 472 , 475 , 478 , 287 , 483 , 283 , 275 , -1  , -1  , -1  , -1  , ],
            [-1  , -1  , -1  , -1  , 150 , 154 , 97  , 161 , 164 , 167 , 170 , 173 , 464 , 301 , 298 , 295 , 292 , 484 , 281 , 279 , -1  , -1  , -1  , -1  , ],
            [-1  , -1  , -1  , -1  , 102 , 99  , 96  , 93  , 90  , 87  , 84  , 81  , 303 , 467 , 470 , 473 , 476 , 479 , 482 , 485 , -1  , -1  , -1  , -1  , ],
        ],
        dtype=np.int_,
    ),
}

# Note: [:,::-1] to mirror the provided image
rhd_64 = np.array(
    [  # https://intantech.com/RHD_headstages.html?tabSelect=RHD64ch&yPos=0
        # Chip side
        [-1, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, -1],
        [-1, 47, 45, 43, 41, 39, 37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 17, -1],
        [-1, 49, 51, 53, 55, 57, 59, 61, 63, 1, 3, 5, 7, 9, 11, 13, 15, -1],
        [-1, 48, 50, 52, 54, 56, 58, 60, 62, 0, 2, 4, 6, 8, 10, 12, 14, -1],
    ]
)[:, ::-1]

rhd_32 = np.array(
    [  # https://intantech.com/RHD_headstages.html?tabSelect=RHD32ch&yPos=0
        # Chip side
        [-1, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, -1],
        [-1, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, -1],
    ]
)[:, ::-1]

rhs_32 = np.array(
    [  # https://intantech.com/RHS_headstages.html?tabSelect=RHS32ch&yPos=0
        # Chip side
        [-1, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1],
        [-1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -1],
    ]
)[:, ::-1]

# fmt: on

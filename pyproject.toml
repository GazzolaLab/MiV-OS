# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "MiV-OS"
version = "0.2.1"
description = "Python software for analysis and computing framework used in MiV project."
readme = "README.md"
authors = ["GazzolaLab <skim449@illinois.edu>"]
license = "MIT"
repository = "https://github.com/GazzolaLab/MiV-OS"
homepage = "https://mindinvitro.illinois.edu"
documentation = "https://miv-os.readthedocs.io"
keywords = ["neuroscience", "statistics", "data-analysis", "electrophysiology", "neurophysiology"]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Education",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]

# ...
include = ["miv/py.typed"]
packages = [
    { include = "miv" }
]


[tool.poetry.scripts]  # TODO: query `scripts` directory
convert_open_ephys_to_miv = "scripts.convert_open_ephys_to_miv:main"


[tool.poetry.dependencies]
python = ">=3.8,<3.11"
scipy = "^1.9.1"
elephant = "^0.11.1"
matplotlib = "^3.5.3"
neo = "^0.10.2"
pandas = "^1.4.4"
PyWavelets = "^1.3.0"
quantities = "^0.13.0"
scikit-learn = "^1.1.2"
seaborn = "^0.11.2"
tqdm = "^4.64.0"
numpy = "^1.23.2"
viziphant = "^0.2.0"
Sphinx = {version = "^4.5.0", optional = true, extras = ["docs"]}
pydata-sphinx-theme = {version = "^0.9.0", optional = true, extras = ["docs"]}
readthedocs-sphinx-search = {version = "^0.1.2", optional = true, extras = ["docs"]}
sphinx-autodoc-typehints = {version = "^1.19.1", optional = true, extras = ["docs"]}
myst-parser = {version = "^0.17.2", optional = true, extras = ["docs"]}
numpydoc = {version = "^1.4.0", optional = true, extras = ["docs"]}
sphinx-togglebutton = {version = "^0.3.2", optional = true, extras = ["docs"]}
sphinx-copybutton = {version = "^0.5.0", optional = true, extras = ["docs"]}
myst-nb = {version = "^0.15.0", optional = true, extras = ["docs"]}
pyinform = "^0.2.0"
graphviz = "^0.20.1"
Pillow = "9.1.1"
h5py = "^3.7.0"
h5py-cache = "^1.0"
pyvis = "^0.2.1"
lyon = { version = "^1.0.0", optional = true, extras = ["experiment"] }
pyseries = {extras = ["experiment", "docs"], version = "^1.0.26"}
serial = "^0.0.97"
click = "^8.1.3"
sphinxcontrib-mermaid = {version = "^0.7.1", extras = ["docs"]}
poetryup = "^0.10.0"

[tool.poetry.dev-dependencies]
black = "^22.8.0"
isort = {extras = ["colors"], version = "^5.10.1"}
mypy = "^0.950"
mypy-extensions = "^0.4.3"
pre-commit = "^2.20.0"
pydocstyle = "^6.1.1"
pylint = "^2.15.0"
pytest = "^7.1.3"
pyupgrade = "^2.37.3"
coverage = "^6.4.4"
pytest-html = "^3.1.1"
pytest-cov = "^3.0.0"
flake8 = "^5.0.4"

[tool.poetry.extras]
docs = [
  "sphinx",
  "pydata-sphinx-theme",
  "readthedocs-sphinx-search",
  "sphinx-autodoc-typehints",
  "myst-parser",
  "myst-nb",
  "numpydoc",
  "sphinx-togglebutton",
  "sphinx-copybutton",
  "sphinxcontrib-mermaid"
]
experiment = [
  "lyon",
  "pyseries"
]



[tool.black]
# https://github.com/psf/black
target-version = ["py38"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 38
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.8
pretty = true
show_traceback = true
color_output = true

# allow_redefinition = false
# check_untyped_defs = false  # TODO: Disabled cuz it might be to harsh condition, but open to discussion.
# disallow_any_generics = false
# disallow_incomplete_defs = true
ignore_missing_imports = true
# implicit_reexport = false
# no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
# strict_equality = true
# strict_optional = true
# warn_no_return = true
# warn_redundant_casts = true
# warn_return_any = true
# warn_unreachable = false  # TODO: open to discussion
# warn_unused_configs = true
# warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL", "ELLIPSIS"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
#  "--doctest-modules", TODO: Try to include pytest.doctest
#  "--doctest-continue-on-failure",
]

[build-system]
requires = ["hatchling>=1.0.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["miv"]

[tool.hatch.build.targets.sdist]
include = ["miv"]

[project]
name = "MiV-OS"
version = "0.3.2.post2"
description = "Python software for analysis and computing framework used in MiV project."
readme = "README.md"
authors = [
    {name = "skim0119", email = "skim0119@gmail.com"}
]
license = {text = "MIT"}
requires-python = ">=3.10,<=3.12"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Education",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
keywords = ["neuroscience", "statistics", "data-analysis", "electrophysiology", "neurophysiology"]
dependencies = [
    "scipy>=1.9.1",
    "elephant>=1.0.0",
    "matplotlib>=3.5.2",
    "neo>=0.11.0,<0.14.0",
    "pandas>=2.0.2",
    "PyWavelets>=1.3.0",
    "quantities>=0.14.1",
    "scikit-learn>=1.1.1",
    "seaborn>=0.11.2,<0.13.0",
    "tqdm>=4.64.0",
    "numpy>=1.23.2",
    "viziphant>=0.4.0",
    "pyinform>=0.2.0",
    "graphviz>=0.20.1",
    "Pillow==10.3.0",
    "h5py>=3.7.0",
    "pyvis>=0.2.1,<0.4.0",
    "click>=8.1.3",
    "numba>=0.58.1",
    "machinable>=4.0",
    "coverage>=7.1.0",
    "opencv-python>=4.7.0.72",
    "meautility>=1.5.1",
    "joblib>=1.4.2",
]

[project.urls]
Homepage = "https://mindinvitro.illinois.edu"
Documentation = "https://miv-os.readthedocs.io"
Repository = "https://github.com/GazzolaLab/MiV-OS"

[project.scripts]
convert_open_ephys_to_miv = "miv.machinary.convert_open_ephys_to_miv:main"
miv_extract_spiketrain = "miv.machinary.miv_extract_spiketrain:main"
miv_clean_cache = "miv.machinary.clean_cache:clean_cache"
miv_zip_results = "miv.machinary.zip_results:zip_results"

[project.optional-dependencies]
docs = [
  "sphinx>=5.3.0",
  "pydata-sphinx-theme>=0.14",
  "readthedocs-sphinx-search>=0.3.1",
  "sphinx-autodoc-typehints>=1.19.1",
  "myst-parser>=0.18.1",
  "myst-nb>=0.17.1",
  "numpydoc>=1.4.0",
  "sphinx-togglebutton>=0.3.2",
  "sphinx-copybutton>=0.5.0",
  "sphinxcontrib-mermaid>=1.0.0"
]
experiment = [
  "pyserial>=3.5"
]
sortingExtension = [
  "dtaidistance>=2.3.10",
]
algorithmExtension = [
  "rupture>=1.4.5"
]
mpi = [
  "mpi4py>=4.0.1"
]
dev = [
  "ruff>=0.3.4",
  "mypy>=1.12.1",
  "mypy-extensions>=1.0.0",
  "pre-commit>=3.0.4",
  "pydocstyle>=6.1.1",
  "pytest>=8.3.3",
  "coverage[toml]>=7.5.3",
  "pytest-html>=4.1.0",
  "pytest-cov>=5.0.0",
  "pytest-mock>=3.14.0",
  "pytest-mpi>=0.6"
]



[tool.ruff]
# https://docs.astral.sh/ruff/
target-version = "py310"
line-length = 88
lint.select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "W",    # pycodestyle warnings
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
lint.ignore = [
    "B901",  # strict on zip
    "F403",  # 'from module import *' used; unable to detect undefined names
    "E203",  # whitespace before ':'
    "E266",  # too many leading '#' for block comment
    "E501",  # line too long (handled by formatter)
    "W5",    # line break before binary operator
    "B008",  # do not perform function calls in argument defaults
    "PLR0913", # too many arguments
    "I",     # ignore all import sorting rules
    "D",  # missing docstring in public module
    "N",    # pep8-naming
    "PL",   # pylint
]
lint.pydocstyle.convention = "numpy"
lint.isort.known-first-party = ["miv"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "_build",
    "buck-out",
    "build",
    "dist",
    "env",
    "venv",
    "__pycache__",
    "docs/conf.py",
    "tests",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = "3.10"
pretty = true
show_traceback = true
color_output = true
strict = true

allow_redefinition = false
check_untyped_defs = false  # TODO: Disabled cuz it might be to harsh condition, but open to discussion.
disallow_any_generics = false
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = true
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
# strict_equality = true
# strict_optional = true
# warn_no_return = true
# warn_redundant_casts = true
# warn_return_any = true
warn_unreachable = false
# warn_unused_configs = true
warn_unused_ignores = false

exclude = [
    "miv/io/openephys/binary.py", # not part of the dev target
    "miv/io/intan/rhs.py", # not part of the dev target
]

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL", "ELLIPSIS"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
#  "--doctest-modules", TODO: Try to include pytest.doctest
#  "--doctest-continue-on-failure",
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Enable pragma
    "pragma: no cover",
    "TODO",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "def __repr__",
    "def plot_*",
    "if self.debug:",
    "if settings.DEBUG",
    "if TYPE_CHECKING:",
    "if show:",
    "raise AssertionError",
    "raise NotImplementedError",
    '''class '.*\bProtocol\)':''',
    ''''@(abc\.)?'abstractmethod''',
    '\.\.\.'
]
# fail_under = 80
show_missing = true


[tool.coverage.run]
branch = true
omit = [
    "*/.local/*",
	  "setup.py",
    "*/__init__.py",
    "miv/io/intan/rhs.py",# not part of the dev target
    "miv/io/asdf/asdf.py",# not part of the dev target
    "miv/visualization/colors.py",# not part of the dev target
    "miv/visualization/format.py",
]
